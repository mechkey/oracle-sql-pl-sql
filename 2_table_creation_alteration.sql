
CREATE TABLE PERSON OF PERSON_TY (
        CONSTRAINT PK_PERSON PRIMARY KEY (PID)
        )
/

CREATE TABLE BRANCH OF BRANCH_TY (
	CONSTRAINT PK_BRANCH PRIMARY KEY (BRANCH_ID))
        NESTED TABLE STAFF STORE AS BRANCH_STAFF_MEMBERS_NT
        NESTED TABLE HAS_TRACKS STORE AS BRANCH_TRACKS_NT
/


CREATE TABLE OFF_CAMP OF OFF_CAMP_TY (
	CONSTRAINT PK_OFF_CAMP PRIMARY KEY (OFF_CAMP_AD_ID))
        NESTED TABLE STUDENT_TT STORE AS OFF_CAMP_TERM_ADDR_NT
        NESTED TABLE HOME_ADDR STORE AS OFF_CAMP_HOME_ADDR_NT
/
        
CREATE TABLE ON_CAMP OF ON_CAMP_TY (
	CONSTRAINT PK_ON_CAMP_PK PRIMARY KEY (LOC_ID), 
        FOREIGN KEY (BRANCH_PRI) REFERENCES BRANCH         ,
        FOREIGN KEY (BRANCH_SEC) REFERENCES BRANCH
        ) 
        NESTED TABLE STAFF_OFFICE STORE AS ON_CAMP_STAFF_OFFICE_NT
/
        

CREATE TABLE SUBJECT OF SUBJECT_TY (
	CONSTRAINT PK_SUBJECT PRIMARY KEY (SUBJECT_ID) )
        NESTED TABLE S_ON_TRACKS_NT STORE AS SUBJ_TRACKS
        NESTED TABLE S_STUDENT_MARKS_NT STORE AS SUBJECT_MARKS_NT
        NESTED TABLE TEACHERS STORE AS SUBJ_TEACHERS_HRS_NT
/
REM	/* REM	CONSTRAINT UNQ_SUBJ_TITLE UNIQUE	) ; */

CREATE TABLE KIN OF KIN_TY (
	PRIMARY KEY (PID) ) 
	NESTED TABLE STUDENT_NT STORE AS KIN_STUDENTS
	NESTED TABLE STAFF_NT STORE AS KIN_STAFFS
/

CREATE TABLE TRACK OF TRACK_TY (
	CONSTRAINT PK_TRACK PRIMARY KEY (TRACK_ID),
    FOREIGN KEY (UNDER_BRANCH_ID) REFERENCES BRANCH)
    NESTED TABLE T_SUBJECTS_NT STORE AS TRACK_SUBJECTS_NT
    NESTED TABLE T_STUDENTS_NT STORE AS TRACK_STUDENTS_NT
/


CREATE TABLE STUDENT OF STUDENT_TY (
	PRIMARY KEY (PID),
        FOREIGN KEY (KIN_ID_REF) REFERENCES KIN,
        FOREIGN KEY (T_ADDR) REFERENCES OFF_CAMP)
        NESTED TABLE TRACKS STORE AS STUDENT_TRACKS_NT
        NESTED TABLE TUTEE_REL STORE AS STUDENT_TUTORINGS_NT
        NESTED TABLE SUBJECTMARKS STORE AS STUDENT_SUBJECT_MARKS_NT
/
	

  CREATE TABLE TRACK_STUDENT OF TRACK_STUDENT_TY (
		PRIMARY KEY (ID),
        FOREIGN KEY (TRACK_ID) REFERENCES TRACK,
        FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT
        )
/
CREATE TABLE SUBJ_MARK OF SUBJ_MARK_TY (
	PRIMARY KEY (ID),
	FOREIGN KEY (SUBJECT_ID) REFERENCES SUBJECT,
	FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT)
/
   

CREATE TABLE STAFF OF STAFF_TY (
	PRIMARY KEY (PID)  ,
        FOREIGN KEY (WORKS_FOR_BRANCH_ID)  REFERENCES BRANCH,
        FOREIGN KEY (OFFICE_LOC) REFERENCES ON_CAMP)
        NESTED TABLE SUBJECT_TUTOR_OF STORE AS STAFF_SUBJECT_TUTOR_NT
        NESTED TABLE TUTOR_REL STORE AS STAFF_TUTORINGS_NT
        NESTED TABLE TEACHES_SUBJ STORE AS STAFF_TEACHING_SUBJ_HRS_NT
/

CREATE TABLE TUTORING OF TUTORING_TY (
		PRIMARY KEY (ID) ,
        FOREIGN KEY (STAFF_ID) REFERENCES STAFF,
        FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT)
/

CREATE TABLE STAFF_TEACH OF STAFF_TEACH_TY (
		PRIMARY KEY (ID),
        FOREIGN KEY (TEACHER) REFERENCES STAFF,
        FOREIGN KEY (SUBJECT) REFERENCES SUBJECT)
/

CREATE TABLE BRANCH_CHAIR OF BRANCH_CHAIR_TY (
        PRIMARY KEY (ID),
        FOREIGN KEY (BRANCH_C) REFERENCES BRANCH,
        FOREIGN KEY (CHAIRED_BY) REFERENCES STAFF)
/


ALTER TABLE BRANCH ADD CONSTRAINT FK_BRANCH_CHAIR           FOREIGN KEY (CHAIR) REFERENCES BRANCH_CHAIR;
ALTER TABLE STAFF ADD CONSTRAINT FK_STAFF_IS_CHAIR_OF   FOREIGN KEY (CHAIRS) REFERENCES BRANCH_CHAIR;
ALTER TABLE SUBJECT ADD CONSTRAINT FK_SUBJ_TUTOR_STAFF    FOREIGN KEY (SUBJECT_TUTOR) REFERENCES STAFF;
ALTER TABLE STAFF ADD CONSTRAINT FK_STAFF_KIN           FOREIGN KEY (KIN_ID_REF) REFERENCES KIN;
ALTER TABLE STAFF ADD CONSTRAINT FK_STAFF_LEAD_TRACK   FOREIGN KEY (LEAD_OF_TRACK) REFERENCES TRACK;
ALTER TABLE TRACK ADD CONSTRAINT FK_TRACK_LED_BY     FOREIGN KEY (LED_BY) REFERENCES STAFF;

ALTER TABLE SUBJECT ADD CONSTRAINT S_LEVEL_1_CHAR CHECK (S_LEVEL IN ('1', '2', '3', 'M', 'R'));
ALTER TABLE TRACK ADD CONSTRAINT TRACK_LEVEL_1_CHAR CHECK (T_LEVEL IN ('1', '2', '3', 'M', 'R'));
ALTER TABLE TRACK ADD CONSTRAINT TRACK_DUR_MONTHS_180 CHECK (C_DURATION_MONTHS <= 180);

ALTER TABLE STAFF ADD CONSTRAINT FAC_GENDER_CHECK CHECK (GENDER IN ('M', 'F', 'T', 'O'));
ALTER TABLE STUDENT ADD CONSTRAINT STU_GENDER_CHECK CHECK (GENDER IN ('M', 'F', 'T', 'O'));

ALTER TABLE KIN ADD CONSTRAINT KIN_EMAIL CHECK (PRIMARY_EMAIL LIKE '%@%.%'); 
ALTER TABLE STAFF ADD CONSTRAINT FAC_EMAIL CHECK (PRIMARY_EMAIL LIKE '%@%.%'); 
ALTER TABLE STUDENT ADD CONSTRAINT STU_EMAIL CHECK (PRIMARY_EMAIL LIKE '%@%.%'); 


ALTER TABLE KIN ADD CONSTRAINT KIN_START_K CHECK (PID LIKE 'K%');
ALTER TABLE STAFF ADD CONSTRAINT FAC_START_F CHECK (PID LIKE 'F%');
ALTER TABLE STUDENT ADD CONSTRAINT STU_START_S CHECK (PID LIKE 'S%');
ALTER TABLE OFF_CAMP ADD CONSTRAINT OFF_CAMP_START_A CHECK (OFF_CAMP_AD_ID LIKE 'AOF%');

ALTER TABLE STAFF ADD CONSTRAINT FAT_TITLE_OK CHECK (UPPER(TITLE) IN ('MR' ,'MISS', 'MRS', 'MS', 'DR', 'MX', 'SIR', 'LADY', 'LORD')); 
ALTER TABLE STUDENT ADD CONSTRAINT STU_TITLE_OK CHECK (UPPER(TITLE) IN ('MR' ,'MISS', 'MRS', 'MS', 'DR', 'MX', 'SIR', 'LADY', 'LORD')); 
ALTER TABLE STUDENT ADD CONSTRAINT BILLING_STATUS_OK CHECK (BILLING_STATUS IN ('UK', 'EU', 'COMMONWEALTH','INTERNATIONAL'));
ALTER TABLE TRACK_STUDENT ADD CONSTRAINT CRS_END_DATE_AFTER_START_DATE CHECK (TRACK_END_DATE >= TRACK_START_DATE);
ALTER TABLE TUTORING ADD CONSTRAINT TUT_END_DATE_AFTER_START_DATE CHECK (TUTOR_END_DATE >= TUTOR_START_DATE);
ALTER TABLE BRANCH_CHAIR ADD CONSTRAINT CHAIR_END_DATE_AF_ST_DATE CHECK (CHAIR_END_DATE >= CHAIR_START_DATE);
ALTER TABLE TRACK ADD CONSTRAINT UNQ_T_TITLE UNIQUE (T_TITLE);
ALTER TABLE SUBJECT ADD CONSTRAINT UNQ_S_TITLE UNIQUE (S_TITLE);


ALTER TABLE SUBJ_MARK ADD CONSTRAINT GRADE_REAL CHECK (GRADE <= 100 AND GRADE >= 0);


DESC TUTORING  ;
DESC STUDENT  ;
DESC STAFF  ;
DESC ON_CAMP  ;
DESC OFF_CAMP  ;
DESC SUBJECT  ;
DESC KIN  ;
DESC BRANCH_CHAIR  ;
DESC BRANCH  ;
DESC TRACK_STUDENT  ;
DESC TRACK  ;
DESC SUBJ_MARK  ;
DESC STAFF_TEACH ;


SHO ERR
